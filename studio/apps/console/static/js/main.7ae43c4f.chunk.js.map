{"version":3,"sources":["config.js","utils/datetime.js","App.js","utils/ValidateEmail.js","serviceWorker.js","index.js"],"names":["CONFIG","js_date_time","unixtime","isNaN","date","Date","y","getFullYear","m","getMonth","d","getDate","h","getHours","minute","getMinutes","second","getSeconds","App","props","componentWillMount","console","log","fetch","method","headers","redirect","then","res","ok","redirected","window","location","href","url","Promise","reject","json","status","userInfoAmend","i","state","userCanAmend","length","value","disabled","setState","userInfo","roles","catch","err","ErrorMsg","showModal","modalVisible","handleModalCancel","SuccessMsg","msg","message","success","error","handleModalOk","e","result","oldPasswordInput","newPasswordInput","email","min_length","test","modalLoading","body","JSON","stringify","details","setTimeout","handleAmend","old_val","target","placeholder","handlePswChange","togglePasswordAmend","userPasswordAmend","toggleDisabled","r","old_state","this","roleInfo","undefined","role","title","visible","onOk","onCancel","footer","key","onClick","type","loading","direction","Object","keys","map","index","addonAfter","EditOutlined","bind","values","onChange","Password","CloseOutlined","iconRender","EyeTwoTone","EyeInvisibleOutlined","bordered","column","xxl","xl","lg","md","sm","xs","extra","Item","label","onMouse","username","parseInt","last_login_time","updated_at","confirmation","ip","id","text","Component","Boolean","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.7ae43c4f.chunk.js","sourcesContent":["const CONFIG = {\r\n    \"HOME_URL\":\"https://www.dutbit.com/userservice/home\",\r\n    \"USERINFO_API\":\"https://www.dutbit.com/userservice/v2/userinfo\",\r\n    \"MINIMAL_PASSWORD_LENGTH\":3\r\n};\r\nexport default CONFIG","export default function js_date_time(unixtime) {\r\n    if(isNaN(unixtime))return \"N/A\";\r\n    var date = new Date(unixtime);\r\n    var y = date.getFullYear();\r\n    var m = date.getMonth() + 1;\r\n    m = m < 10 ? ('0' + m) : m;\r\n    var d = date.getDate();\r\n    d = d < 10 ? ('0' + d) : d;\r\n    var h = date.getHours();\r\n    h = h < 10 ? ('0' + h) : h;\r\n    var minute = date.getMinutes();\r\n    var second = date.getSeconds();\r\n    minute = minute < 10 ? ('0' + minute) : minute;\r\n    second = second < 10 ? ('0' + second) : second;\r\n    // return y + '-' + m + '-' + d + ' ' + h + ':' + minute + ':' + second;//年月日时分秒\r\n    return y + '-' + m + '-' + d + ' ' + h + ':' + minute;\r\n\r\n}","import React,{Component} from 'react'\nimport { Modal,Button,Descriptions, Badge, Input, Space,message} from 'antd';\nimport { EyeInvisibleOutlined,EyeTwoTone,CloseOutlined } from '@ant-design/icons';\nimport './App.css'\nimport {EditOutlined} from \"@ant-design/icons\";\nimport CONFIG from \"./config\";\nimport js_date_time from \"./utils/datetime\";\nimport ValidateEmail from \"./utils/ValidateEmail\";\nexport default class App extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            userCanAmend:[\"username\",\"password\",\"email\"],\n            userInfo:{},\n            userInfoAmend:{},\n            userPasswordAmend:false,\n            roles:{},\n            modalVisible:false,\n            modalLoading:false,\n            oldPasswordInput:'',\n            newPasswordInput:'',\n        }\n    }\n    componentWillMount = () => {\n        console.log(\"mounting\");\n        fetch(CONFIG['USERINFO_API'],{\n            method:\"GET\",\n            headers:{\n                'Content-Type': 'application/json',\n                redirect: 'follow'\n            }\n        }).then(res=>{\n            console.log(res);\n            if(!res.ok){\n                return Promise.reject(res.status)\n            }\n            if (res.redirected) {\n                window.location.href = res.url;\n                return Promise.reject(\"Did you log in?\")\n            }\n            return res.json()\n        }).then(res=>{\n            console.log(res);\n            let roles = {\"vol_time_admin\":\"志愿时长查询管理员\",\"super_admin\":\"Super Admin\",\"default_user\":\"Default User\"};\n            let userInfoAmend = {};\n            for(let i=0;i<this.state.userCanAmend.length;i++){\n                userInfoAmend[this.state.userCanAmend[i]] = {\n                    value: res[this.state.userCanAmend[i]],\n                    disabled:true\n                }\n            }\n            this.setState({\n                userInfo:res,\n                roles:roles,\n                userInfoAmend:userInfoAmend,\n            })\n        }).catch(err=>{\n            this.ErrorMsg(`Error encountered: ${err}`);\n            console.log(`Error encountered: ${err}`)\n        });\n        //let jinfo = {\"_id\":\"5f6ea1df06f16c9c47adbaa7\",\"confirmation\":\"map[]\",\"created_at\":\"1601085919856\",\"email\":\"tzy15368@outlook.com\",\"ip\":\"111.117.123.72\",\"last_login_ip\":\"111.117.123.72\",\"last_login_time\":\"1602759214294\",\"password\":\"bf278df12620a00e3e76a8a9cce6f705\",\"role\":\"[]\",\"site\":\"{\\\"super_admin\\\":true}\",\"username\":\"LN\"}\n    };\n    showModal = ()=>{\n        this.setState({\n            modalVisible: true,\n        });\n    };\n    handleModalCancel = () => {\n        this.setState({\n            modalVisible: false,\n        });\n    };\n    SuccessMsg = (msg) => {\n        message.success(msg);\n    };\n\n    ErrorMsg = (err) => {\n        message.error(err);\n    };\n    handleModalOk = e => {\n        let result = {};\n        for(let i=0;i<this.state.userCanAmend.length;i++){\n            if(this.state.userCanAmend[i]===\"password\"){\n                continue\n            }\n            result[this.state.userCanAmend[i]] = this.state.userInfoAmend[this.state.userCanAmend[i]][\"value\"]\n        }\n        result['old_password'] = this.state.oldPasswordInput;\n        result['new_password'] = this.state.newPasswordInput;\n        console.log(\"update result: \",result);\n        const min_length = CONFIG['MINIMAL_PASSWORD_LENGTH'];\n        if(result['username']===''){\n            this.ErrorMsg(`Invalid username`);\n            return;\n        }\n        if(!ValidateEmail(result['email'])){\n            this.ErrorMsg(`Invalid email address`);\n            return;\n        }\n        if(\n            result['old_password']!==''&&result['new_password']!==''&&\n            (result['old_password'].length<min_length||result['new_password'].length<min_length)\n        ){\n            this.ErrorMsg(`Password is shorter than ${min_length} characters`);\n            return;\n        }\n        this.setState({\n            modalLoading:true\n        });\n        fetch(CONFIG[\"USERINFO_API\"],{\n            method:\"PUT\",\n            headers:{\n                'Content-Type': 'application/json',\n                redirect: 'follow'\n            },\n            body: JSON.stringify(result)\n        }).then(res=>{\n            if (res.redirected) {\n                window.location.href = res.url;\n                return Promise.reject(\"Did you log in?\")\n            }\n            this.setState({modalLoading:false});\n            if(!res.ok){\n                return Promise.reject(res.status)\n            }\n            return res.json()\n        }).then((res)=>{\n            console.log(res);\n            if(res.success){\n                this.SuccessMsg(res.details);\n                this.setState({modalVisible:false});\n            } else {\n                return Promise.reject(res.details)\n            }\n        }).then(this.componentWillMount).catch(err=>{\n            console.log(err);\n            this.ErrorMsg(`Error encountered: ${err}`);\n        });\n        setTimeout(()=>{this.setState({modalLoading:false,modalVisible:false})},2000)\n    };\n    handleAmend = (e)=>{\n        let old_val = this.state.userInfoAmend;\n        old_val[e.target.placeholder][\"value\"] = e.target.value;\n        //console.log(old_val)\n        this.setState({\n            userInfoAmend:old_val\n        })\n    };\n    handlePswChange = (e)=>{\n        if(e.target.placeholder===\"new password\"){\n            this.setState({newPasswordInput:e.target.value})\n        } else {\n            this.setState({oldPasswordInput:e.target.value})\n        }\n    };\n    togglePasswordAmend = (e)=>{\n        this.setState({\n            userPasswordAmend:!this.state.userPasswordAmend\n        })\n    };\n    toggleDisabled = (e,r)=>{\n        //console.log(e,r)\n        //e.target.enable()\n        let old_state = this.state.userInfoAmend;\n        old_state[e]['disabled'] = !old_state[e]['disabled'];\n        this.setState({\n            userInfoAmend:old_state\n        })\n    };\n    render(){\n        const {userInfo,roles,modalVisible,userInfoAmend,modalLoading,userPasswordAmend,oldPasswordInput,newPasswordInput} = this.state;\n        const roleInfo = userInfo.role===undefined?{}:userInfo.role;\n        return (\n            <div>\n                <Modal\n                    title=\"Edit Personal Info\"\n                    visible={modalVisible}\n                    onOk={this.handleModalOk}\n                    onCancel={this.handleModalCancel}\n                    footer={[\n                        <Button key=\"back\" onClick={this.handleModalCancel}>\n                            Cancel\n                        </Button>,\n                        <Button key=\"submit\" type=\"primary\" loading={modalLoading} onClick={this.handleModalOk}>\n                            Submit\n                        </Button>,\n                    ]}\n                >\n\n                    <Space direction=\"vertical\">\n                    {\n                    Object.keys(userInfoAmend).map((key,index)=>{\n                        if(key!=='password'){\n                            return (\n                                <div>\n                                    <Input\n                                        placeholder={key}\n                                        addonAfter={\n                                            <EditOutlined\n                                                onClick={this.toggleDisabled.bind(this,Object.keys(userInfoAmend)[index])}\n                                            />\n                                        }\n                                        value={Object.values(userInfoAmend)[index][\"value\"]}\n                                        onChange={this.handleAmend}\n                                        disabled={Object.values(userInfoAmend)[index][\"disabled\"]}\n                                    />\n                                </div>\n                            )\n                        } else {\n                            if(!userPasswordAmend){\n                                return (\n                                        <Input.Password\n                                            placeholder=\"input password\"\n                                            value={\"*****************\"}\n                                            addonAfter={<EditOutlined onClick={this.togglePasswordAmend}/>}\n                                            iconRender={visible => (visible ? <EyeTwoTone /> : <EyeInvisibleOutlined />)}\n                                            disabled={true}\n                                        />\n                                )\n                            } else {\n                                return (\n                                    <div>\n                                        <Space direction=\"vertical\">\n                                            <Input.Password\n                                                placeholder=\"new password\"\n                                                value={newPasswordInput}\n                                                onChange={this.handlePswChange}\n                                                addonAfter={<CloseOutlined onClick={this.togglePasswordAmend}/>}\n                                            />\n                                            <Input.Password\n                                                value={oldPasswordInput}\n                                                placeholder=\"old password\"\n                                                iconRender={visible => (visible ? <EyeTwoTone /> : <EyeInvisibleOutlined />)}\n                                                onChange={this.handlePswChange}\n                                                addonAfter={<CloseOutlined onClick={this.togglePasswordAmend}/>}\n                                            />\n                                        </Space>\n                                    </div>\n                                )\n                            }\n\n                        }\n                    })\n                }\n\n                    </Space>\n                </Modal>\n                <Descriptions\n                    title=\"Personal Info\"\n                    bordered\n                    column={{ xxl: 4, xl: 3, lg: 3, md: 3, sm: 2, xs: 1 }}\n                    extra={<EditOutlined onClick={this.showModal}/>}\n                >\n                    <Descriptions.Item label=\"Username\" onMouse>{userInfo.username}</Descriptions.Item>\n                    <Descriptions.Item label=\"Email\">{userInfo.email}</Descriptions.Item>\n                    <Descriptions.Item label=\"Previous Login Time\">{js_date_time(parseInt(userInfo.last_login_time))}</Descriptions.Item>\n                    <Descriptions.Item label=\"Previous Update Time\">{js_date_time(parseInt(userInfo.updated_at))}</Descriptions.Item>\n                    <Descriptions.Item label=\"Validation\">{userInfo.confirmation==={}?\"\":JSON.stringify(userInfo.confirmation)}</Descriptions.Item>\n                    <Descriptions.Item label=\"Previous Login Ip\">{userInfo.ip}</Descriptions.Item>\n                    <Descriptions.Item label=\"Role\">\n                        <div>\n                            {\n                                Object.keys(roleInfo).map((key,value)=>{\n                                    return (\n                                        <div id={value}>\n                                            <Badge status=\"processing\" text=\"\" />{roles[key]}\n                                        </div>\n                                    )\n                                })\n\n                            }\n                        </div>\n                    </Descriptions.Item>\n                </Descriptions>\n            </div>\n        )\n    }\n}\n","export default function ValidateEmail(email) {\r\n    let reg = /^([a-zA-Z]|[0-9])(\\w|\\-)+@[a-zA-Z0-9]+\\.([a-zA-Z]{2,4})$/;\r\n    //if(reg.test(email)){return true}else{return false}\r\n    return reg.test(email)\r\n}\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}